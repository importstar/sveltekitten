// This file is auto-generated by @hey-api/openapi-ts

export type AbilityChange = {
	version_group: VersionGroupSummary;
	readonly effect_entries: Array<AbilityChangeEffectText>;
};

export type AbilityChangeEffectText = {
	effect: string;
	language: LanguageSummary;
};

export type AbilityDetail = {
	readonly id: number;
	name: string;
	is_main_series?: boolean;
	generation: GenerationSummary;
	readonly names: Array<AbilityName>;
	readonly effect_entries: Array<AbilityEffectText>;
	readonly effect_changes: Array<AbilityChange>;
	readonly flavor_text_entries: Array<AbilityFlavorText>;
	readonly pokemon: Array<{
		is_hidden: boolean;
		slot: number;
		pokemon: {
			name: string;
			url: string;
		};
	}>;
};

export type AbilityEffectText = {
	effect: string;
	short_effect: string;
	language: LanguageSummary;
};

export type AbilityFlavorText = {
	flavor_text: string;
	language: LanguageSummary;
	version_group: VersionGroupSummary;
};

export type AbilityName = {
	name: string;
	language: LanguageSummary;
};

export type AbilitySummary = {
	name: string;
	readonly url: string;
};

export type BerryDetail = {
	readonly id: number;
	name: string;
	growth_time: number;
	max_harvest: number;
	natural_gift_power: number;
	size: number;
	smoothness: number;
	soil_dryness: number;
	firmness: BerryFirmnessSummary;
	readonly flavors: Array<{
		potency: number;
		flavor: {
			/**
			 * The name of the flavor
			 */
			name?: string;
			/**
			 * The URL to get more information about the flavor
			 */
			url?: string;
		};
	}>;
	item: ItemSummary;
	natural_gift_type: TypeSummary;
};

export type BerryFirmnessDetail = {
	readonly id: number;
	name: string;
	readonly berries: Array<BerrySummary>;
	readonly names: Array<BerryFirmnessName>;
};

export type BerryFirmnessName = {
	name: string;
	language: LanguageSummary;
};

export type BerryFirmnessSummary = {
	name: string;
	readonly url: string;
};

export type BerryFlavorDetail = {
	readonly id: number;
	name: string;
	readonly berries: Array<{
		potency: number;
		berry: {
			/**
			 * The name of the berry
			 */
			name?: string;
			/**
			 * The URL to get more information about the berry
			 */
			url?: string;
		};
	}>;
	contest_type: ContestTypeSummary;
	readonly names: Array<BerryFlavorName>;
};

export type BerryFlavorName = {
	name: string;
	language: LanguageSummary;
};

export type BerryFlavorSummary = {
	name: string;
	readonly url: string;
};

export type BerrySummary = {
	name: string;
	readonly url: string;
};

export type CharacteristicDescription = {
	description?: string;
	language: LanguageSummary;
};

export type CharacteristicDetail = {
	readonly id: number;
	gene_modulo: number;
	readonly possible_values: Array<number>;
	highest_stat: StatSummary;
	readonly descriptions: Array<CharacteristicDescription>;
};

export type CharacteristicSummary = {
	readonly url: string;
};

export type ContestEffectDetail = {
	readonly id: number;
	appeal: number;
	jam: number;
	readonly effect_entries: Array<ContestEffectEffectText>;
	readonly flavor_text_entries: Array<ContestEffectFlavorText>;
};

export type ContestEffectEffectText = {
	effect: string;
	language: LanguageSummary;
};

export type ContestEffectFlavorText = {
	flavor_text: string;
	language: LanguageSummary;
};

export type ContestEffectSummary = {
	readonly url: string;
};

export type ContestTypeDetail = {
	readonly id: number;
	name: string;
	berry_flavor: BerryFlavorSummary;
	readonly names: Array<ContestTypeName>;
};

export type ContestTypeName = {
	name: string;
	color: string;
	language: LanguageSummary;
};

export type ContestTypeSummary = {
	name: string;
	readonly url: string;
};

export type EggGroupDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<EggGroupName>;
	readonly pokemon_species: Array<{
		/**
		 * Pokemon species name.
		 */
		name?: string;
		/**
		 * The URL to get more information about the species
		 */
		url?: string;
	}>;
};

export type EggGroupName = {
	name: string;
	language: LanguageSummary;
};

export type EggGroupSummary = {
	name: string;
	readonly url: string;
};

export type EncounterConditionDetail = {
	readonly id: number;
	name: string;
	readonly values: Array<EncounterConditionValueSummary>;
	readonly names: Array<EncounterConditionName>;
};

export type EncounterConditionName = {
	name: string;
	language: LanguageSummary;
};

export type EncounterConditionSummary = {
	name: string;
	readonly url: string;
};

export type EncounterConditionValueDetail = {
	readonly id: number;
	name: string;
	condition: EncounterConditionSummary;
	readonly names: Array<EncounterConditionValueName>;
};

export type EncounterConditionValueName = {
	name: string;
	language: LanguageSummary;
};

export type EncounterConditionValueSummary = {
	name: string;
	readonly url: string;
};

export type EncounterMethodDetail = {
	readonly id: number;
	name: string;
	order?: number | null;
	readonly names: Array<EncounterMethodName>;
};

export type EncounterMethodName = {
	name: string;
	language: LanguageSummary;
};

export type EncounterMethodSummary = {
	name: string;
	readonly url: string;
};

export type EvolutionChainDetail = {
	readonly id: number;
	baby_trigger_item: ItemSummary;
	readonly chain: {
		evolution_details: Array<unknown>;
		evolves_to: Array<{
			evolution_details: Array<{
				gender: {
					name: string;
					url: string;
				};
				held_item: {
					name: string;
					url: string;
				};
				item: {
					name: string;
					url: string;
				};
				known_move: unknown;
				known_move_type: unknown;
				location: {
					name: string;
					url: string;
				};
				min_affection: number;
				min_beauty: number;
				min_happiness: number;
				min_level: number;
				needs_overworld_rain: boolean;
				party_species: string;
				party_type: string;
				relative_physical_stats: string;
				time_of_day: string;
				trade_species: string;
				trigger: {
					name: string;
					url: string;
				};
				turn_upside_down: boolean;
			}>;
			is_baby: boolean;
			species: {
				name: string;
				url: string;
			};
		}>;
		is_baby: boolean;
		species: {
			name: string;
			url: string;
		};
	};
};

export type EvolutionChainSummary = {
	readonly url: string;
};

export type EvolutionTriggerDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<EvolutionTriggerName>;
	readonly pokemon_species: Array<{
		name: string;
		url: string;
	}>;
};

export type EvolutionTriggerName = {
	name: string;
	language: LanguageSummary;
};

export type EvolutionTriggerSummary = {
	name: string;
	readonly url: string;
};

export type Experience = {
	level: number;
	experience: number;
};

export type GenderDetail = {
	readonly id: number;
	name: string;
	readonly pokemon_species_details: Array<{
		rate: number;
		pokemon_species: {
			name: string;
			url: string;
		};
	}>;
	readonly required_for_evolution: Array<{
		name: string;
		url: string;
	}>;
};

export type GenderSummary = {
	name: string;
	readonly url: string;
};

export type GenerationDetail = {
	readonly id: number;
	name: string;
	readonly abilities: Array<AbilitySummary>;
	main_region: RegionSummary;
	readonly moves: Array<MoveSummary>;
	readonly names: Array<GenerationName>;
	readonly pokemon_species: Array<PokemonSpeciesSummary>;
	readonly types: Array<TypeSummary>;
	readonly version_groups: Array<VersionGroupSummary>;
};

export type GenerationName = {
	name: string;
	language: LanguageSummary;
};

export type GenerationSummary = {
	name: string;
	readonly url: string;
};

export type GrowthRateDescription = {
	description?: string;
	language: LanguageSummary;
};

export type GrowthRateDetail = {
	readonly id: number;
	name: string;
	formula: string;
	readonly descriptions: Array<GrowthRateDescription>;
	readonly levels: Array<Experience>;
	readonly pokemon_species: Array<PokemonSpeciesSummary>;
};

export type GrowthRateSummary = {
	name: string;
	readonly url: string;
};

export type ItemAttributeDescription = {
	description?: string;
	language: LanguageSummary;
};

export type ItemAttributeDetail = {
	readonly id: number;
	name: string;
	readonly descriptions: Array<ItemAttributeDescription>;
	readonly items: Array<{
		name: string;
		url: string;
	}>;
	readonly names: Array<ItemAttributeName>;
};

export type ItemAttributeName = {
	name: string;
	language: LanguageSummary;
};

export type ItemAttributeSummary = {
	name: string;
	readonly url: string;
};

export type ItemCategoryDetail = {
	readonly id: number;
	name: string;
	readonly items: Array<ItemSummary>;
	readonly names: Array<ItemCategoryName>;
	pocket: ItemPocketSummary;
};

export type ItemCategoryName = {
	name: string;
	language: LanguageSummary;
};

export type ItemCategorySummary = {
	name: string;
	readonly url: string;
};

export type ItemDetail = {
	readonly id: number;
	name: string;
	cost?: number | null;
	fling_power?: number | null;
	fling_effect: ItemFlingEffectSummary;
	readonly attributes: Array<{
		name: string;
		url: string;
	}>;
	category: ItemCategorySummary;
	readonly effect_entries: Array<ItemEffectText>;
	readonly flavor_text_entries: Array<ItemFlavorText>;
	readonly game_indices: Array<ItemGameIndex>;
	readonly names: Array<ItemName>;
	readonly held_by_pokemon: Array<{
		pokemon: {
			name: string;
			url: string;
		};
		'version-details': Array<{
			rarity: number;
			version: {
				name: string;
				url: string;
			};
		}>;
	}>;
	readonly sprites: {
		default: string;
	};
	readonly baby_trigger_for: {
		url: string;
	};
	readonly machines: Array<{
		machine: string;
		version_group: {
			name: string;
			url: string;
		};
	}>;
};

export type ItemEffectText = {
	effect: string;
	short_effect: string;
	language: LanguageSummary;
};

export type ItemFlavorText = {
	text: string;
	version_group: VersionGroupSummary;
	language: LanguageSummary;
};

export type ItemFlingEffectDetail = {
	readonly id: number;
	name: string;
	readonly effect_entries: Array<ItemFlingEffectEffectText>;
	readonly items: Array<ItemSummary>;
};

export type ItemFlingEffectEffectText = {
	effect: string;
	language: LanguageSummary;
};

export type ItemFlingEffectSummary = {
	name: string;
	readonly url: string;
};

export type ItemGameIndex = {
	game_index: number;
	generation: GenerationSummary;
};

export type ItemName = {
	name: string;
	language: LanguageSummary;
};

export type ItemPocketDetail = {
	readonly id: number;
	name: string;
	readonly categories: Array<ItemCategorySummary>;
	readonly names: Array<ItemPocketName>;
};

export type ItemPocketName = {
	name: string;
	language: LanguageSummary;
};

export type ItemPocketSummary = {
	name: string;
	readonly url: string;
};

export type ItemSummary = {
	name: string;
	readonly url: string;
};

export type LanguageDetail = {
	readonly id: number;
	name: string;
	official?: boolean;
	iso639: string;
	iso3166: string;
	readonly names: Array<LanguageName>;
};

export type LanguageName = {
	name: string;
	language: LanguageSummary;
};

export type LanguageSummary = {
	name: string;
	readonly url: string;
};

export type LocationAreaDetail = {
	readonly id: number;
	name: string;
	game_index: number;
	readonly encounter_method_rates: Array<{
		encounter_method: {
			name: string;
			url: string;
		};
		version_details: Array<{
			rate: number;
			version: {
				name: string;
				url: string;
			};
		}>;
	}>;
	location: LocationSummary;
	readonly names: Array<LocationAreaName>;
	readonly pokemon_encounters: Array<{
		pokemon: {
			name: string;
			url: string;
		};
		version_details: Array<{
			version: {
				name: string;
				url: string;
			};
			max_chance: number;
			encounter_details: {
				min_level: number;
				max_level: number;
				condition_values?: {
					name: string;
					url: string;
				};
				chance: number;
				method: {
					name: string;
					url: string;
				};
			};
		}>;
	}>;
};

export type LocationAreaName = {
	name: string;
	language: LanguageSummary;
};

export type LocationAreaSummary = {
	name: string;
	readonly url: string;
};

export type LocationDetail = {
	readonly id: number;
	name: string;
	region: RegionSummary;
	readonly names: Array<LocationName>;
	readonly game_indices: Array<LocationGameIndex>;
	readonly areas: Array<LocationAreaSummary>;
};

export type LocationGameIndex = {
	game_index: number;
	generation: GenerationSummary;
};

export type LocationName = {
	name: string;
	language: LanguageSummary;
};

export type LocationSummary = {
	name: string;
	readonly url: string;
};

export type MachineDetail = {
	readonly id: number;
	item: ItemSummary;
	version_group: VersionGroupSummary;
	move: MoveSummary;
};

export type MachineSummary = {
	readonly url: string;
};

export type MoveBattleStyleDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<MoveBattleStyleName>;
};

export type MoveBattleStyleName = {
	name: string;
	language: LanguageSummary;
};

export type MoveBattleStyleSummary = {
	name: string;
	readonly url: string;
};

export type MoveChange = {
	accuracy?: number | null;
	power?: number | null;
	pp?: number | null;
	effect_chance: number;
	readonly effect_entries: Array<{
		effect: string;
		short_effect: string;
		language: {
			name: string;
			url: string;
		};
	}>;
	type: TypeSummary;
	version_group: VersionGroupSummary;
};

export type MoveDamageClassDescription = {
	description?: string;
	language: LanguageSummary;
};

export type MoveDamageClassDetail = {
	readonly id: number;
	name: string;
	readonly descriptions: Array<MoveDamageClassDescription>;
	readonly moves: Array<MoveSummary>;
	readonly names: Array<MoveDamageClassName>;
};

export type MoveDamageClassName = {
	name: string;
	language: LanguageSummary;
};

export type MoveDamageClassSummary = {
	name: string;
	readonly url: string;
};

export type MoveDetail = {
	readonly id: number;
	name: string;
	accuracy?: number | null;
	effect_chance: number;
	pp?: number | null;
	priority?: number | null;
	power?: number | null;
	readonly contest_combos: {
		normal: {
			use_before: Array<{
				name: string;
				url: string;
			}>;
			use_after: Array<{
				name: string;
				url: string;
			}>;
		};
		super: {
			use_before: Array<{
				name: string;
				url: string;
			}>;
			use_after: Array<{
				name: string;
				url: string;
			}>;
		};
	};
	contest_type: ContestTypeSummary;
	contest_effect: ContestEffectSummary;
	damage_class: MoveDamageClassSummary;
	readonly effect_entries: Array<{
		effect: string;
		short_effect: string;
		language: {
			name: string;
			url: string;
		};
	}>;
	readonly effect_changes: Array<{
		effect_entries: Array<{
			effect: string;
			language: {
				name: string;
				url: string;
			};
		}>;
		version_group: {
			name: string;
			url: string;
		};
	}>;
	generation: GenerationSummary;
	meta: MoveMeta;
	readonly names: Array<MoveName>;
	readonly past_values: Array<MoveChange>;
	readonly stat_changes: Array<{
		change: number;
		stat: {
			name: string;
			url: string;
		};
	}>;
	super_contest_effect: SuperContestEffectSummary;
	target: MoveTargetSummary;
	type: TypeSummary;
	readonly machines: Array<{
		machine: {
			url: string;
		};
		version_group: {
			name: string;
			url: string;
		};
	}>;
	readonly flavor_text_entries: Array<MoveFlavorText>;
	readonly learned_by_pokemon: Array<{
		name: string;
		url: string;
	}>;
};

export type MoveFlavorText = {
	flavor_text: string;
	language: LanguageSummary;
	version_group: VersionGroupSummary;
};

export type MoveLearnMethodDescription = {
	description?: string;
	language: LanguageSummary;
};

export type MoveLearnMethodDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<MoveLearnMethodName>;
	readonly descriptions: Array<MoveLearnMethodDescription>;
	readonly version_groups: Array<{
		name: string;
		url: string;
	}>;
};

export type MoveLearnMethodName = {
	name: string;
	language: LanguageSummary;
};

export type MoveLearnMethodSummary = {
	name: string;
	readonly url: string;
};

export type MoveMeta = {
	ailment: MoveMetaAilmentSummary;
	category: MoveMetaCategorySummary;
	min_hits?: number | null;
	max_hits?: number | null;
	min_turns?: number | null;
	max_turns?: number | null;
	drain?: number | null;
	healing?: number | null;
	crit_rate?: number | null;
	ailment_chance?: number | null;
	flinch_chance?: number | null;
	stat_chance?: number | null;
};

export type MoveMetaAilmentDetail = {
	readonly id: number;
	name: string;
	readonly moves: Array<{
		name: string;
		url: string;
	}>;
	readonly names: Array<MoveMetaAilmentName>;
};

export type MoveMetaAilmentName = {
	name: string;
	language: LanguageSummary;
};

export type MoveMetaAilmentSummary = {
	name: string;
	readonly url: string;
};

export type MoveMetaCategoryDescription = {
	description?: string;
	language: LanguageSummary;
};

export type MoveMetaCategoryDetail = {
	readonly id: number;
	name: string;
	readonly descriptions: Array<MoveMetaCategoryDescription>;
	readonly moves: Array<{
		name: string;
		url: string;
	}>;
};

export type MoveMetaCategorySummary = {
	name: string;
	readonly url: string;
};

export type MoveName = {
	name: string;
	language: LanguageSummary;
};

export type MoveSummary = {
	name: string;
	readonly url: string;
};

export type MoveTargetDescription = {
	description?: string;
	language: LanguageSummary;
};

export type MoveTargetDetail = {
	readonly id: number;
	name: string;
	readonly descriptions: Array<MoveTargetDescription>;
	readonly moves: Array<MoveSummary>;
	readonly names: Array<MoveTargetName>;
};

export type MoveTargetName = {
	name: string;
	language: LanguageSummary;
};

export type MoveTargetSummary = {
	name: string;
	readonly url: string;
};

export type NatureBattleStylePreference = {
	low_hp_preference: number;
	high_hp_preference: number;
	move_battle_style: MoveBattleStyleSummary;
};

export type NatureDetail = {
	readonly id: number;
	name: string;
	decreased_stat: StatSummary;
	increased_stat: StatSummary;
	likes_flavor: BerryFlavorSummary;
	hates_flavor: BerryFlavorSummary;
	readonly berries: Array<BerrySummary>;
	readonly pokeathlon_stat_changes: Array<{
		max_change: number;
		pokeathlon_stat: {
			name: string;
			url: string;
		};
	}>;
	readonly move_battle_style_preferences: Array<NatureBattleStylePreference>;
	readonly names: Array<NatureName>;
};

export type NatureName = {
	name: string;
	language: LanguageSummary;
};

export type NatureSummary = {
	name: string;
	readonly url: string;
};

export type PaginatedAbilitySummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<AbilitySummary>;
};

export type PaginatedBerryFirmnessSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<BerryFirmnessSummary>;
};

export type PaginatedBerryFlavorSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<BerryFlavorSummary>;
};

export type PaginatedBerrySummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<BerrySummary>;
};

export type PaginatedCharacteristicSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<CharacteristicSummary>;
};

export type PaginatedContestEffectSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ContestEffectSummary>;
};

export type PaginatedContestTypeSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ContestTypeSummary>;
};

export type PaginatedEggGroupSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<EggGroupSummary>;
};

export type PaginatedEncounterConditionSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<EncounterConditionSummary>;
};

export type PaginatedEncounterConditionValueSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<EncounterConditionValueSummary>;
};

export type PaginatedEncounterMethodSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<EncounterMethodSummary>;
};

export type PaginatedEvolutionChainSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<EvolutionChainSummary>;
};

export type PaginatedEvolutionTriggerSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<EvolutionTriggerSummary>;
};

export type PaginatedGenderSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<GenderSummary>;
};

export type PaginatedGenerationSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<GenerationSummary>;
};

export type PaginatedGrowthRateSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<GrowthRateSummary>;
};

export type PaginatedItemAttributeSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ItemAttributeSummary>;
};

export type PaginatedItemCategorySummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ItemCategorySummary>;
};

export type PaginatedItemFlingEffectSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ItemFlingEffectSummary>;
};

export type PaginatedItemPocketSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ItemPocketSummary>;
};

export type PaginatedItemSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<ItemSummary>;
};

export type PaginatedLanguageSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<LanguageSummary>;
};

export type PaginatedLocationAreaSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<LocationAreaSummary>;
};

export type PaginatedLocationSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<LocationSummary>;
};

export type PaginatedMachineSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MachineSummary>;
};

export type PaginatedMoveBattleStyleSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveBattleStyleSummary>;
};

export type PaginatedMoveDamageClassSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveDamageClassSummary>;
};

export type PaginatedMoveLearnMethodSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveLearnMethodSummary>;
};

export type PaginatedMoveMetaAilmentSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveMetaAilmentSummary>;
};

export type PaginatedMoveMetaCategorySummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveMetaCategorySummary>;
};

export type PaginatedMoveSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveSummary>;
};

export type PaginatedMoveTargetSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<MoveTargetSummary>;
};

export type PaginatedNatureSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<NatureSummary>;
};

export type PaginatedPalParkAreaSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PalParkAreaSummary>;
};

export type PaginatedPokeathlonStatSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokeathlonStatSummary>;
};

export type PaginatedPokedexSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokedexSummary>;
};

export type PaginatedPokemonColorSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokemonColorSummary>;
};

export type PaginatedPokemonFormSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokemonFormSummary>;
};

export type PaginatedPokemonHabitatSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokemonHabitatSummary>;
};

export type PaginatedPokemonShapeSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokemonShapeSummary>;
};

export type PaginatedPokemonSpeciesSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokemonSpeciesSummary>;
};

export type PaginatedPokemonSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<PokemonSummary>;
};

export type PaginatedRegionSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<RegionSummary>;
};

export type PaginatedStatSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<StatSummary>;
};

export type PaginatedSuperContestEffectSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<SuperContestEffectSummary>;
};

export type PaginatedTypeSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<TypeSummary>;
};

export type PaginatedVersionGroupSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<VersionGroupSummary>;
};

export type PaginatedVersionSummaryList = {
	count?: number;
	next?: string;
	previous?: string;
	results?: Array<VersionSummary>;
};

export type PalParkAreaDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<PalParkAreaName>;
	readonly pokemon_encounters: Array<{
		base_score: number;
		'pokemon-species': {
			name: string;
			url: string;
		};
		rate: number;
	}>;
};

export type PalParkAreaName = {
	name: string;
	language: LanguageSummary;
};

export type PalParkAreaSummary = {
	name: string;
	readonly url: string;
};

export type PokeathlonStatDetail = {
	readonly id: number;
	name: string;
	readonly affecting_natures: {
		decrease: Array<{
			max_change: number;
			nature: {
				name: string;
				url: string;
			};
		}>;
		increase: Array<{
			max_change: number;
			nature: {
				name: string;
				url: string;
			};
		}>;
	};
	readonly names: Array<PokeathlonStatName>;
};

export type PokeathlonStatName = {
	name: string;
	language: LanguageSummary;
};

export type PokeathlonStatSummary = {
	name: string;
	readonly url: string;
};

export type PokedexDescription = {
	description?: string;
	language: LanguageSummary;
};

export type PokedexDetail = {
	readonly id: number;
	name: string;
	is_main_series?: boolean;
	readonly descriptions: Array<PokedexDescription>;
	readonly names: Array<PokedexName>;
	readonly pokemon_entries: Array<{
		entry_number: number;
		pokemon_species: {
			name: string;
			url: string;
		};
	}>;
	region: RegionSummary;
	readonly version_groups: Array<{
		name: string;
		url: string;
	}>;
};

export type PokedexName = {
	name: string;
	language: LanguageSummary;
};

export type PokedexSummary = {
	name: string;
	readonly url: string;
};

export type PokemonColorDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<PokemonColorName>;
	readonly pokemon_species: Array<PokemonSpeciesSummary>;
};

export type PokemonColorName = {
	name: string;
	language: LanguageSummary;
};

export type PokemonColorSummary = {
	name: string;
	readonly url: string;
};

export type PokemonDetail = {
	readonly id: number;
	name: string;
	base_experience?: number | null;
	height?: number | null;
	is_default?: boolean;
	order?: number | null;
	weight?: number | null;
	readonly abilities: Array<{
		ability: {
			name: string;
			url: string;
		};
		is_hidden: boolean;
		slot: number;
	}>;
	readonly past_abilities: Array<{
		abilities: Array<{
			ability: {
				name: string;
				url: string;
			};
			is_hidden: boolean;
			slot: number;
		}>;
		generation: {
			name: string;
			url: string;
		};
	}>;
	readonly forms: Array<PokemonFormSummary>;
	readonly game_indices: Array<PokemonGameIndex>;
	readonly held_items: {
		item: {
			name: string;
			url: string;
		};
		version_details: Array<{
			rarity: number;
			version: {
				name: string;
				url: string;
			};
		}>;
	};
	readonly location_area_encounters: string;
	readonly moves: Array<{
		move: {
			name: string;
			url: string;
		};
		version_group_details: Array<{
			level_learned_at: number;
			move_learn_method: {
				name: string;
				url: string;
			};
			version_group: {
				name: string;
				url: string;
			};
		}>;
	}>;
	species: PokemonSpeciesSummary;
	readonly sprites: {
		front_default?: string;
		[key: string]: string | undefined;
	};
	readonly cries: {
		latest: string;
		legacy: string;
	};
	readonly stats: Array<PokemonStat>;
	readonly types: Array<{
		slot: number;
		type: {
			name: string;
			url: string;
		};
	}>;
	readonly past_types: Array<{
		generation: {
			name: string;
			url: string;
		};
		types: Array<{
			slot: number;
			type: {
				name: string;
				url: string;
			};
		}>;
	}>;
};

export type PokemonDexEntry = {
	entry_number: number;
	pokedex: PokedexSummary;
};

export type PokemonFormDetail = {
	readonly id: number;
	name: string;
	order?: number | null;
	form_order?: number | null;
	is_default?: boolean;
	is_battle_only?: boolean;
	is_mega?: boolean;
	form_name: string;
	pokemon: PokemonSummary;
	readonly sprites: {
		default?: string;
		[key: string]: string | undefined;
	};
	version_group: VersionGroupSummary;
	readonly form_names: Array<{
		language: {
			name: string;
			url: string;
		};
		name: string;
	}>;
	readonly names: Array<{
		language: {
			name: string;
			url: string;
		};
		name: string;
	}>;
	readonly types: Array<{
		slot: number;
		type: {
			name: string;
			url: string;
		};
	}>;
};

export type PokemonFormSummary = {
	name: string;
	readonly url: string;
};

export type PokemonGameIndex = {
	game_index: number;
	version: VersionSummary;
};

export type PokemonHabitatDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<PokemonHabitatName>;
	readonly pokemon_species: Array<PokemonSpeciesSummary>;
};

export type PokemonHabitatName = {
	name: string;
	language: LanguageSummary;
};

export type PokemonHabitatSummary = {
	name: string;
	readonly url: string;
};

export type PokemonShapeDetail = {
	readonly id: number;
	name: string;
	readonly awesome_names: Array<{
		awesome_name: string;
		language: {
			name: string;
			url: string;
		};
	}>;
	readonly names: Array<{
		url: string;
		name: string;
	}>;
	readonly pokemon_species: Array<PokemonSpeciesSummary>;
};

export type PokemonShapeSummary = {
	name: string;
	readonly url: string;
};

export type PokemonSpeciesDescription = {
	description?: string;
	language: LanguageSummary;
};

export type PokemonSpeciesDetail = {
	readonly id: number;
	name: string;
	order?: number | null;
	gender_rate?: number | null;
	capture_rate?: number | null;
	base_happiness?: number | null;
	is_baby?: boolean;
	is_legendary?: boolean;
	is_mythical?: boolean;
	hatch_counter?: number | null;
	has_gender_differences?: boolean;
	forms_switchable?: boolean;
	growth_rate: GrowthRateSummary;
	readonly pokedex_numbers: Array<PokemonDexEntry>;
	readonly egg_groups: Array<{
		name: string;
		url: string;
	}>;
	color: PokemonColorSummary;
	shape: PokemonShapeSummary;
	evolves_from_species: PokemonSpeciesSummary;
	evolution_chain: EvolutionChainSummary;
	habitat: PokemonHabitatSummary;
	generation: GenerationSummary;
	readonly names: Array<{
		language: {
			name: string;
			url: string;
		};
		name: string;
	}>;
	readonly pal_park_encounters: Array<{
		area: {
			name: string;
			url: string;
		};
		base_score: number;
		rate: number;
	}>;
	readonly form_descriptions: Array<PokemonSpeciesDescription>;
	readonly flavor_text_entries: Array<PokemonSpeciesFlavorText>;
	readonly genera: Array<{
		genus: string;
		language: {
			name: string;
			url: string;
		};
	}>;
	readonly varieties: Array<{
		is_default: boolean;
		pokemon: {
			name: string;
			url: string;
		};
	}>;
};

export type PokemonSpeciesFlavorText = {
	flavor_text: string;
	language: LanguageSummary;
	version: VersionSummary;
};

export type PokemonSpeciesSummary = {
	name: string;
	readonly url: string;
};

export type PokemonStat = {
	base_stat: number;
	effort: number;
	stat: StatSummary;
};

export type PokemonSummary = {
	name: string;
	readonly url: string;
};

export type RegionDetail = {
	readonly id: number;
	name: string;
	readonly locations: Array<LocationSummary>;
	main_generation: GenerationSummary;
	readonly names: Array<RegionName>;
	readonly pokedexes: Array<PokedexSummary>;
	readonly version_groups: Array<{
		name: string;
		url: string;
	}>;
};

export type RegionName = {
	name: string;
	language: LanguageSummary;
};

export type RegionSummary = {
	name: string;
	readonly url: string;
};

export type StatDetail = {
	readonly id: number;
	name: string;
	game_index: number;
	is_battle_only?: boolean;
	readonly affecting_moves: {
		increase: Array<{
			change: number;
			move: {
				name: string;
				url: string;
			};
		}>;
		decrease: Array<{
			change: number;
			move: {
				name: string;
				url: string;
			};
		}>;
	};
	readonly affecting_natures: {
		increase: Array<{
			name: string;
			url: string;
		}>;
		decrease: Array<{
			name: string;
			url: string;
		}>;
	};
	readonly characteristics: Array<CharacteristicSummary>;
	move_damage_class: MoveDamageClassSummary;
	readonly names: Array<StatName>;
};

export type StatName = {
	name: string;
	language: LanguageSummary;
};

export type StatSummary = {
	name: string;
	readonly url: string;
};

export type SuperContestEffectDetail = {
	readonly id: number;
	appeal: number;
	readonly flavor_text_entries: Array<SuperContestEffectFlavorText>;
	readonly moves: Array<MoveSummary>;
};

export type SuperContestEffectFlavorText = {
	flavor_text: string;
	language: LanguageSummary;
};

export type SuperContestEffectSummary = {
	readonly url: string;
};

/**
 * Serializer for the Type resource
 */
export type TypeDetail = {
	readonly id: number;
	name: string;
	readonly damage_relations: {
		no_damage_to: Array<{
			name: string;
			url: string;
		}>;
		half_damage_to: Array<{
			name: string;
			url: string;
		}>;
		double_damage_to: Array<{
			name: string;
			url: string;
		}>;
		no_damage_from: Array<{
			name: string;
			url: string;
		}>;
		half_damage_from: Array<{
			name: string;
			url: string;
		}>;
		double_damage_from: Array<{
			name: string;
			url: string;
		}>;
	};
	readonly past_damage_relations: Array<{
		generation: {
			name: string;
			url: string;
		};
		damage_relations: {
			no_damage_to: Array<{
				name: string;
				url: string;
			}>;
			half_damage_to: Array<{
				name: string;
				url: string;
			}>;
			double_damage_to: Array<{
				name: string;
				url: string;
			}>;
			no_damage_from: Array<{
				name: string;
				url: string;
			}>;
			half_damage_from: Array<{
				name: string;
				url: string;
			}>;
			double_damage_from: Array<{
				name: string;
				url: string;
			}>;
		};
	}>;
	readonly game_indices: Array<TypeGameIndex>;
	generation: GenerationSummary;
	move_damage_class: MoveDamageClassSummary;
	readonly names: Array<AbilityName>;
	readonly pokemon: Array<{
		slot?: number;
		pokemon?: {
			/**
			 * The name of the pokemon
			 */
			name?: string;
			/**
			 * The URL to get more information about the pokemon
			 */
			url?: string;
		};
	}>;
	readonly moves: Array<MoveSummary>;
	readonly sprites: {
		[key: string]: {
			[key: string]: {
				'name-icon'?: string;
			};
		};
	};
};

export type TypeGameIndex = {
	game_index: number;
	generation: GenerationSummary;
};

export type TypeSummary = {
	name: string;
	readonly url: string;
};

/**
 * Should have a link to Version Group info but the Circular
 * dependency and compilation order fight eachother and I'm
 * not sure how to add anything other than a hyperlink
 */
export type VersionDetail = {
	readonly id: number;
	name: string;
	readonly names: Array<VersionName>;
	version_group: VersionGroupSummary;
};

export type VersionGroupDetail = {
	readonly id: number;
	name: string;
	order?: number | null;
	generation: GenerationSummary;
	readonly move_learn_methods: Array<{
		name: string;
		url: string;
	}>;
	readonly pokedexes: Array<{
		name: string;
		url: string;
	}>;
	readonly regions: Array<{
		name: string;
		url: string;
	}>;
	readonly versions: Array<VersionSummary>;
};

export type VersionGroupSummary = {
	name: string;
	readonly url: string;
};

export type VersionName = {
	name: string;
	language: LanguageSummary;
};

export type VersionSummary = {
	name: string;
	readonly url: string;
};

export type AbilityListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/ability/';
};

export type AbilityListResponses = {
	200: PaginatedAbilitySummaryList;
};

export type AbilityListResponse = AbilityListResponses[keyof AbilityListResponses];

export type AbilityRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/ability/{id}/';
};

export type AbilityRetrieveResponses = {
	200: AbilityDetail;
};

export type AbilityRetrieveResponse = AbilityRetrieveResponses[keyof AbilityRetrieveResponses];

export type BerryListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/berry/';
};

export type BerryListResponses = {
	200: PaginatedBerrySummaryList;
};

export type BerryListResponse = BerryListResponses[keyof BerryListResponses];

export type BerryRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/berry/{id}/';
};

export type BerryRetrieveResponses = {
	200: BerryDetail;
};

export type BerryRetrieveResponse = BerryRetrieveResponses[keyof BerryRetrieveResponses];

export type BerryFirmnessListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/berry-firmness/';
};

export type BerryFirmnessListResponses = {
	200: PaginatedBerryFirmnessSummaryList;
};

export type BerryFirmnessListResponse =
	BerryFirmnessListResponses[keyof BerryFirmnessListResponses];

export type BerryFirmnessRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/berry-firmness/{id}/';
};

export type BerryFirmnessRetrieveResponses = {
	200: BerryFirmnessDetail;
};

export type BerryFirmnessRetrieveResponse =
	BerryFirmnessRetrieveResponses[keyof BerryFirmnessRetrieveResponses];

export type BerryFlavorListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/berry-flavor/';
};

export type BerryFlavorListResponses = {
	200: PaginatedBerryFlavorSummaryList;
};

export type BerryFlavorListResponse = BerryFlavorListResponses[keyof BerryFlavorListResponses];

export type BerryFlavorRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/berry-flavor/{id}/';
};

export type BerryFlavorRetrieveResponses = {
	200: BerryFlavorDetail;
};

export type BerryFlavorRetrieveResponse =
	BerryFlavorRetrieveResponses[keyof BerryFlavorRetrieveResponses];

export type CharacteristicListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/characteristic/';
};

export type CharacteristicListResponses = {
	200: PaginatedCharacteristicSummaryList;
};

export type CharacteristicListResponse =
	CharacteristicListResponses[keyof CharacteristicListResponses];

export type CharacteristicRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/characteristic/{id}/';
};

export type CharacteristicRetrieveResponses = {
	200: CharacteristicDetail;
};

export type CharacteristicRetrieveResponse =
	CharacteristicRetrieveResponses[keyof CharacteristicRetrieveResponses];

export type ContestTypeListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/contest-type/';
};

export type ContestTypeListResponses = {
	200: PaginatedContestTypeSummaryList;
};

export type ContestTypeListResponse = ContestTypeListResponses[keyof ContestTypeListResponses];

export type ContestTypeRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/contest-type/{id}/';
};

export type ContestTypeRetrieveResponses = {
	200: ContestTypeDetail;
};

export type ContestTypeRetrieveResponse =
	ContestTypeRetrieveResponses[keyof ContestTypeRetrieveResponses];

export type ContestEffectListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/contest-effect/';
};

export type ContestEffectListResponses = {
	200: PaginatedContestEffectSummaryList;
};

export type ContestEffectListResponse =
	ContestEffectListResponses[keyof ContestEffectListResponses];

export type ContestEffectRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/contest-effect/{id}/';
};

export type ContestEffectRetrieveResponses = {
	200: ContestEffectDetail;
};

export type ContestEffectRetrieveResponse =
	ContestEffectRetrieveResponses[keyof ContestEffectRetrieveResponses];

export type EggGroupListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/egg-group/';
};

export type EggGroupListResponses = {
	200: PaginatedEggGroupSummaryList;
};

export type EggGroupListResponse = EggGroupListResponses[keyof EggGroupListResponses];

export type EggGroupRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/egg-group/{id}/';
};

export type EggGroupRetrieveResponses = {
	200: EggGroupDetail;
};

export type EggGroupRetrieveResponse = EggGroupRetrieveResponses[keyof EggGroupRetrieveResponses];

export type EncounterMethodListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/encounter-method/';
};

export type EncounterMethodListResponses = {
	200: PaginatedEncounterMethodSummaryList;
};

export type EncounterMethodListResponse =
	EncounterMethodListResponses[keyof EncounterMethodListResponses];

export type EncounterMethodRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/encounter-method/{id}/';
};

export type EncounterMethodRetrieveResponses = {
	200: EncounterMethodDetail;
};

export type EncounterMethodRetrieveResponse =
	EncounterMethodRetrieveResponses[keyof EncounterMethodRetrieveResponses];

export type EncounterConditionListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/encounter-condition/';
};

export type EncounterConditionListResponses = {
	200: PaginatedEncounterConditionSummaryList;
};

export type EncounterConditionListResponse =
	EncounterConditionListResponses[keyof EncounterConditionListResponses];

export type EncounterConditionRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/encounter-condition/{id}/';
};

export type EncounterConditionRetrieveResponses = {
	200: EncounterConditionDetail;
};

export type EncounterConditionRetrieveResponse =
	EncounterConditionRetrieveResponses[keyof EncounterConditionRetrieveResponses];

export type EncounterConditionValueListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/encounter-condition-value/';
};

export type EncounterConditionValueListResponses = {
	200: PaginatedEncounterConditionValueSummaryList;
};

export type EncounterConditionValueListResponse =
	EncounterConditionValueListResponses[keyof EncounterConditionValueListResponses];

export type EncounterConditionValueRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/encounter-condition-value/{id}/';
};

export type EncounterConditionValueRetrieveResponses = {
	200: EncounterConditionValueDetail;
};

export type EncounterConditionValueRetrieveResponse =
	EncounterConditionValueRetrieveResponses[keyof EncounterConditionValueRetrieveResponses];

export type EvolutionChainListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/evolution-chain/';
};

export type EvolutionChainListResponses = {
	200: PaginatedEvolutionChainSummaryList;
};

export type EvolutionChainListResponse =
	EvolutionChainListResponses[keyof EvolutionChainListResponses];

export type EvolutionChainRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/evolution-chain/{id}/';
};

export type EvolutionChainRetrieveResponses = {
	200: EvolutionChainDetail;
};

export type EvolutionChainRetrieveResponse =
	EvolutionChainRetrieveResponses[keyof EvolutionChainRetrieveResponses];

export type EvolutionTriggerListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/evolution-trigger/';
};

export type EvolutionTriggerListResponses = {
	200: PaginatedEvolutionTriggerSummaryList;
};

export type EvolutionTriggerListResponse =
	EvolutionTriggerListResponses[keyof EvolutionTriggerListResponses];

export type EvolutionTriggerRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/evolution-trigger/{id}/';
};

export type EvolutionTriggerRetrieveResponses = {
	200: EvolutionTriggerDetail;
};

export type EvolutionTriggerRetrieveResponse =
	EvolutionTriggerRetrieveResponses[keyof EvolutionTriggerRetrieveResponses];

export type GenerationListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/generation/';
};

export type GenerationListResponses = {
	200: PaginatedGenerationSummaryList;
};

export type GenerationListResponse = GenerationListResponses[keyof GenerationListResponses];

export type GenerationRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/generation/{id}/';
};

export type GenerationRetrieveResponses = {
	200: GenerationDetail;
};

export type GenerationRetrieveResponse =
	GenerationRetrieveResponses[keyof GenerationRetrieveResponses];

export type GenderListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/gender/';
};

export type GenderListResponses = {
	200: PaginatedGenderSummaryList;
};

export type GenderListResponse = GenderListResponses[keyof GenderListResponses];

export type GenderRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/gender/{id}/';
};

export type GenderRetrieveResponses = {
	200: GenderDetail;
};

export type GenderRetrieveResponse = GenderRetrieveResponses[keyof GenderRetrieveResponses];

export type GrowthRateListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/growth-rate/';
};

export type GrowthRateListResponses = {
	200: PaginatedGrowthRateSummaryList;
};

export type GrowthRateListResponse = GrowthRateListResponses[keyof GrowthRateListResponses];

export type GrowthRateRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/growth-rate/{id}/';
};

export type GrowthRateRetrieveResponses = {
	200: GrowthRateDetail;
};

export type GrowthRateRetrieveResponse =
	GrowthRateRetrieveResponses[keyof GrowthRateRetrieveResponses];

export type ItemListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/item/';
};

export type ItemListResponses = {
	200: PaginatedItemSummaryList;
};

export type ItemListResponse = ItemListResponses[keyof ItemListResponses];

export type ItemRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/item/{id}/';
};

export type ItemRetrieveResponses = {
	200: ItemDetail;
};

export type ItemRetrieveResponse = ItemRetrieveResponses[keyof ItemRetrieveResponses];

export type ItemCategoryListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/item-category/';
};

export type ItemCategoryListResponses = {
	200: PaginatedItemCategorySummaryList;
};

export type ItemCategoryListResponse = ItemCategoryListResponses[keyof ItemCategoryListResponses];

export type ItemCategoryRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/item-category/{id}/';
};

export type ItemCategoryRetrieveResponses = {
	200: ItemCategoryDetail;
};

export type ItemCategoryRetrieveResponse =
	ItemCategoryRetrieveResponses[keyof ItemCategoryRetrieveResponses];

export type ItemAttributeListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/item-attribute/';
};

export type ItemAttributeListResponses = {
	200: PaginatedItemAttributeSummaryList;
};

export type ItemAttributeListResponse =
	ItemAttributeListResponses[keyof ItemAttributeListResponses];

export type ItemAttributeRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/item-attribute/{id}/';
};

export type ItemAttributeRetrieveResponses = {
	200: ItemAttributeDetail;
};

export type ItemAttributeRetrieveResponse =
	ItemAttributeRetrieveResponses[keyof ItemAttributeRetrieveResponses];

export type ItemFlingEffectListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/item-fling-effect/';
};

export type ItemFlingEffectListResponses = {
	200: PaginatedItemFlingEffectSummaryList;
};

export type ItemFlingEffectListResponse =
	ItemFlingEffectListResponses[keyof ItemFlingEffectListResponses];

export type ItemFlingEffectRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/item-fling-effect/{id}/';
};

export type ItemFlingEffectRetrieveResponses = {
	200: ItemFlingEffectDetail;
};

export type ItemFlingEffectRetrieveResponse =
	ItemFlingEffectRetrieveResponses[keyof ItemFlingEffectRetrieveResponses];

export type ItemPocketListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/item-pocket/';
};

export type ItemPocketListResponses = {
	200: PaginatedItemPocketSummaryList;
};

export type ItemPocketListResponse = ItemPocketListResponses[keyof ItemPocketListResponses];

export type ItemPocketRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/item-pocket/{id}/';
};

export type ItemPocketRetrieveResponses = {
	200: ItemPocketDetail;
};

export type ItemPocketRetrieveResponse =
	ItemPocketRetrieveResponses[keyof ItemPocketRetrieveResponses];

export type LanguageListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/language/';
};

export type LanguageListResponses = {
	200: PaginatedLanguageSummaryList;
};

export type LanguageListResponse = LanguageListResponses[keyof LanguageListResponses];

export type LanguageRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/language/{id}/';
};

export type LanguageRetrieveResponses = {
	200: LanguageDetail;
};

export type LanguageRetrieveResponse = LanguageRetrieveResponses[keyof LanguageRetrieveResponses];

export type LocationListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/location/';
};

export type LocationListResponses = {
	200: PaginatedLocationSummaryList;
};

export type LocationListResponse = LocationListResponses[keyof LocationListResponses];

export type LocationRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/location/{id}/';
};

export type LocationRetrieveResponses = {
	200: LocationDetail;
};

export type LocationRetrieveResponse = LocationRetrieveResponses[keyof LocationRetrieveResponses];

export type LocationAreaListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
	};
	url: '/api/v2/location-area/';
};

export type LocationAreaListResponses = {
	200: PaginatedLocationAreaSummaryList;
};

export type LocationAreaListResponse = LocationAreaListResponses[keyof LocationAreaListResponses];

export type LocationAreaRetrieveData = {
	body?: never;
	path: {
		/**
		 * A unique integer value identifying this location area.
		 */
		id: number;
	};
	query?: never;
	url: '/api/v2/location-area/{id}/';
};

export type LocationAreaRetrieveResponses = {
	200: LocationAreaDetail;
};

export type LocationAreaRetrieveResponse =
	LocationAreaRetrieveResponses[keyof LocationAreaRetrieveResponses];

export type MachineListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/machine/';
};

export type MachineListResponses = {
	200: PaginatedMachineSummaryList;
};

export type MachineListResponse = MachineListResponses[keyof MachineListResponses];

export type MachineRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/machine/{id}/';
};

export type MachineRetrieveResponses = {
	200: MachineDetail;
};

export type MachineRetrieveResponse = MachineRetrieveResponses[keyof MachineRetrieveResponses];

export type MoveListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move/';
};

export type MoveListResponses = {
	200: PaginatedMoveSummaryList;
};

export type MoveListResponse = MoveListResponses[keyof MoveListResponses];

export type MoveRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move/{id}/';
};

export type MoveRetrieveResponses = {
	200: MoveDetail;
};

export type MoveRetrieveResponse = MoveRetrieveResponses[keyof MoveRetrieveResponses];

export type MoveAilmentListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move-ailment/';
};

export type MoveAilmentListResponses = {
	200: PaginatedMoveMetaAilmentSummaryList;
};

export type MoveAilmentListResponse = MoveAilmentListResponses[keyof MoveAilmentListResponses];

export type MoveAilmentRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move-ailment/{id}/';
};

export type MoveAilmentRetrieveResponses = {
	200: MoveMetaAilmentDetail;
};

export type MoveAilmentRetrieveResponse =
	MoveAilmentRetrieveResponses[keyof MoveAilmentRetrieveResponses];

export type MoveBattleStyleListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move-battle-style/';
};

export type MoveBattleStyleListResponses = {
	200: PaginatedMoveBattleStyleSummaryList;
};

export type MoveBattleStyleListResponse =
	MoveBattleStyleListResponses[keyof MoveBattleStyleListResponses];

export type MoveBattleStyleRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move-battle-style/{id}/';
};

export type MoveBattleStyleRetrieveResponses = {
	200: MoveBattleStyleDetail;
};

export type MoveBattleStyleRetrieveResponse =
	MoveBattleStyleRetrieveResponses[keyof MoveBattleStyleRetrieveResponses];

export type MoveCategoryListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move-category/';
};

export type MoveCategoryListResponses = {
	200: PaginatedMoveMetaCategorySummaryList;
};

export type MoveCategoryListResponse = MoveCategoryListResponses[keyof MoveCategoryListResponses];

export type MoveCategoryRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move-category/{id}/';
};

export type MoveCategoryRetrieveResponses = {
	200: MoveMetaCategoryDetail;
};

export type MoveCategoryRetrieveResponse =
	MoveCategoryRetrieveResponses[keyof MoveCategoryRetrieveResponses];

export type MoveDamageClassListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move-damage-class/';
};

export type MoveDamageClassListResponses = {
	200: PaginatedMoveDamageClassSummaryList;
};

export type MoveDamageClassListResponse =
	MoveDamageClassListResponses[keyof MoveDamageClassListResponses];

export type MoveDamageClassRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move-damage-class/{id}/';
};

export type MoveDamageClassRetrieveResponses = {
	200: MoveDamageClassDetail;
};

export type MoveDamageClassRetrieveResponse =
	MoveDamageClassRetrieveResponses[keyof MoveDamageClassRetrieveResponses];

export type MoveLearnMethodListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move-learn-method/';
};

export type MoveLearnMethodListResponses = {
	200: PaginatedMoveLearnMethodSummaryList;
};

export type MoveLearnMethodListResponse =
	MoveLearnMethodListResponses[keyof MoveLearnMethodListResponses];

export type MoveLearnMethodRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move-learn-method/{id}/';
};

export type MoveLearnMethodRetrieveResponses = {
	200: MoveLearnMethodDetail;
};

export type MoveLearnMethodRetrieveResponse =
	MoveLearnMethodRetrieveResponses[keyof MoveLearnMethodRetrieveResponses];

export type MoveTargetListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/move-target/';
};

export type MoveTargetListResponses = {
	200: PaginatedMoveTargetSummaryList;
};

export type MoveTargetListResponse = MoveTargetListResponses[keyof MoveTargetListResponses];

export type MoveTargetRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/move-target/{id}/';
};

export type MoveTargetRetrieveResponses = {
	200: MoveTargetDetail;
};

export type MoveTargetRetrieveResponse =
	MoveTargetRetrieveResponses[keyof MoveTargetRetrieveResponses];

export type NatureListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/nature/';
};

export type NatureListResponses = {
	200: PaginatedNatureSummaryList;
};

export type NatureListResponse = NatureListResponses[keyof NatureListResponses];

export type NatureRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/nature/{id}/';
};

export type NatureRetrieveResponses = {
	200: NatureDetail;
};

export type NatureRetrieveResponse = NatureRetrieveResponses[keyof NatureRetrieveResponses];

export type PalParkAreaListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pal-park-area/';
};

export type PalParkAreaListResponses = {
	200: PaginatedPalParkAreaSummaryList;
};

export type PalParkAreaListResponse = PalParkAreaListResponses[keyof PalParkAreaListResponses];

export type PalParkAreaRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pal-park-area/{id}/';
};

export type PalParkAreaRetrieveResponses = {
	200: PalParkAreaDetail;
};

export type PalParkAreaRetrieveResponse =
	PalParkAreaRetrieveResponses[keyof PalParkAreaRetrieveResponses];

export type PokedexListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokedex/';
};

export type PokedexListResponses = {
	200: PaginatedPokedexSummaryList;
};

export type PokedexListResponse = PokedexListResponses[keyof PokedexListResponses];

export type PokedexRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokedex/{id}/';
};

export type PokedexRetrieveResponses = {
	200: PokedexDetail;
};

export type PokedexRetrieveResponse = PokedexRetrieveResponses[keyof PokedexRetrieveResponses];

export type PokemonListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokemon/';
};

export type PokemonListResponses = {
	200: PaginatedPokemonSummaryList;
};

export type PokemonListResponse = PokemonListResponses[keyof PokemonListResponses];

export type PokemonRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokemon/{id}/';
};

export type PokemonRetrieveResponses = {
	200: PokemonDetail;
};

export type PokemonRetrieveResponse = PokemonRetrieveResponses[keyof PokemonRetrieveResponses];

export type PokemonColorListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokemon-color/';
};

export type PokemonColorListResponses = {
	200: PaginatedPokemonColorSummaryList;
};

export type PokemonColorListResponse = PokemonColorListResponses[keyof PokemonColorListResponses];

export type PokemonColorRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokemon-color/{id}/';
};

export type PokemonColorRetrieveResponses = {
	200: PokemonColorDetail;
};

export type PokemonColorRetrieveResponse =
	PokemonColorRetrieveResponses[keyof PokemonColorRetrieveResponses];

export type PokemonFormListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokemon-form/';
};

export type PokemonFormListResponses = {
	200: PaginatedPokemonFormSummaryList;
};

export type PokemonFormListResponse = PokemonFormListResponses[keyof PokemonFormListResponses];

export type PokemonFormRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokemon-form/{id}/';
};

export type PokemonFormRetrieveResponses = {
	200: PokemonFormDetail;
};

export type PokemonFormRetrieveResponse =
	PokemonFormRetrieveResponses[keyof PokemonFormRetrieveResponses];

export type PokemonHabitatListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokemon-habitat/';
};

export type PokemonHabitatListResponses = {
	200: PaginatedPokemonHabitatSummaryList;
};

export type PokemonHabitatListResponse =
	PokemonHabitatListResponses[keyof PokemonHabitatListResponses];

export type PokemonHabitatRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokemon-habitat/{id}/';
};

export type PokemonHabitatRetrieveResponses = {
	200: PokemonHabitatDetail;
};

export type PokemonHabitatRetrieveResponse =
	PokemonHabitatRetrieveResponses[keyof PokemonHabitatRetrieveResponses];

export type PokemonShapeListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokemon-shape/';
};

export type PokemonShapeListResponses = {
	200: PaginatedPokemonShapeSummaryList;
};

export type PokemonShapeListResponse = PokemonShapeListResponses[keyof PokemonShapeListResponses];

export type PokemonShapeRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokemon-shape/{id}/';
};

export type PokemonShapeRetrieveResponses = {
	200: PokemonShapeDetail;
};

export type PokemonShapeRetrieveResponse =
	PokemonShapeRetrieveResponses[keyof PokemonShapeRetrieveResponses];

export type PokemonSpeciesListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokemon-species/';
};

export type PokemonSpeciesListResponses = {
	200: PaginatedPokemonSpeciesSummaryList;
};

export type PokemonSpeciesListResponse =
	PokemonSpeciesListResponses[keyof PokemonSpeciesListResponses];

export type PokemonSpeciesRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokemon-species/{id}/';
};

export type PokemonSpeciesRetrieveResponses = {
	200: PokemonSpeciesDetail;
};

export type PokemonSpeciesRetrieveResponse =
	PokemonSpeciesRetrieveResponses[keyof PokemonSpeciesRetrieveResponses];

export type PokeathlonStatListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/pokeathlon-stat/';
};

export type PokeathlonStatListResponses = {
	200: PaginatedPokeathlonStatSummaryList;
};

export type PokeathlonStatListResponse =
	PokeathlonStatListResponses[keyof PokeathlonStatListResponses];

export type PokeathlonStatRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/pokeathlon-stat/{id}/';
};

export type PokeathlonStatRetrieveResponses = {
	200: PokeathlonStatDetail;
};

export type PokeathlonStatRetrieveResponse =
	PokeathlonStatRetrieveResponses[keyof PokeathlonStatRetrieveResponses];

export type RegionListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/region/';
};

export type RegionListResponses = {
	200: PaginatedRegionSummaryList;
};

export type RegionListResponse = RegionListResponses[keyof RegionListResponses];

export type RegionRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/region/{id}/';
};

export type RegionRetrieveResponses = {
	200: RegionDetail;
};

export type RegionRetrieveResponse = RegionRetrieveResponses[keyof RegionRetrieveResponses];

export type StatListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/stat/';
};

export type StatListResponses = {
	200: PaginatedStatSummaryList;
};

export type StatListResponse = StatListResponses[keyof StatListResponses];

export type StatRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/stat/{id}/';
};

export type StatRetrieveResponses = {
	200: StatDetail;
};

export type StatRetrieveResponse = StatRetrieveResponses[keyof StatRetrieveResponses];

export type SuperContestEffectListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/super-contest-effect/';
};

export type SuperContestEffectListResponses = {
	200: PaginatedSuperContestEffectSummaryList;
};

export type SuperContestEffectListResponse =
	SuperContestEffectListResponses[keyof SuperContestEffectListResponses];

export type SuperContestEffectRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/super-contest-effect/{id}/';
};

export type SuperContestEffectRetrieveResponses = {
	200: SuperContestEffectDetail;
};

export type SuperContestEffectRetrieveResponse =
	SuperContestEffectRetrieveResponses[keyof SuperContestEffectRetrieveResponses];

export type TypeListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/type/';
};

export type TypeListResponses = {
	200: PaginatedTypeSummaryList;
};

export type TypeListResponse = TypeListResponses[keyof TypeListResponses];

export type TypeRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/type/{id}/';
};

export type TypeRetrieveResponses = {
	200: TypeDetail;
};

export type TypeRetrieveResponse = TypeRetrieveResponses[keyof TypeRetrieveResponses];

export type VersionListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/version/';
};

export type VersionListResponses = {
	200: PaginatedVersionSummaryList;
};

export type VersionListResponse = VersionListResponses[keyof VersionListResponses];

export type VersionRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/version/{id}/';
};

export type VersionRetrieveResponses = {
	200: VersionDetail;
};

export type VersionRetrieveResponse = VersionRetrieveResponses[keyof VersionRetrieveResponses];

export type VersionGroupListData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Number of results to return per page.
		 */
		limit?: number;
		/**
		 * The initial index from which to return the results.
		 */
		offset?: number;
		/**
		 * > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
		 * Case-insensitive query applied on the `name` property.
		 */
		q?: string;
	};
	url: '/api/v2/version-group/';
};

export type VersionGroupListResponses = {
	200: PaginatedVersionGroupSummaryList;
};

export type VersionGroupListResponse = VersionGroupListResponses[keyof VersionGroupListResponses];

export type VersionGroupRetrieveData = {
	body?: never;
	path: {
		/**
		 * This parameter can be a string or an integer.
		 */
		id: string;
	};
	query?: never;
	url: '/api/v2/version-group/{id}/';
};

export type VersionGroupRetrieveResponses = {
	200: VersionGroupDetail;
};

export type VersionGroupRetrieveResponse =
	VersionGroupRetrieveResponses[keyof VersionGroupRetrieveResponses];

export type PokemonEncountersRetrieveData = {
	body?: never;
	path: {
		pokemon_id: string;
	};
	query?: never;
	url: '/api/v2/pokemon/{pokemon_id}/encounters';
};

export type PokemonEncountersRetrieveResponses = {
	200: Array<{
		location_area: {
			name: string;
			url: string;
		};
		version_details: Array<{
			encounter_details: Array<{
				chance: number;
				condition_values: Array<{
					name: string;
					url: string;
				}>;
				max_level: number;
				method: {
					name: string;
					url: string;
				};
				min_level: number;
			}>;
			max_chance: number;
			version: {
				name: string;
				url: string;
			};
		}>;
	}>;
};

export type PokemonEncountersRetrieveResponse =
	PokemonEncountersRetrieveResponses[keyof PokemonEncountersRetrieveResponses];

export type ClientOptions = {
	baseUrl: 'https://pokeapi.co' | (string & {});
};
